# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# ‚úÖ Directus Render Auto Backend (PostgreSQL-ready)
# Works with Render, Aiven, Supabase, PlanetScale, etc.
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
FROM directus/directus:latest

# Set working directory
WORKDIR /directus

# Switch to root temporarily to install DB clients
USER root
RUN apk add --no-cache postgresql-client mysql-client curl bash
USER node

# Allow SSL connections (for cloud databases)
ENV NODE_TLS_REJECT_UNAUTHORIZED=0

# Expose Directus port
EXPOSE 8055

# Healthcheck for uptime monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8055/server/health || exit 1

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# Startup Script
# 1Ô∏è‚É£ Wait for DB connection
# 2Ô∏è‚É£ Bootstrap Directus (admin auto-setup)
# 3Ô∏è‚É£ Start Directus server
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
CMD sh -c '\
  echo "üöÄ Launching Directus Auto Backend..." && \
  echo "üîç Database client: ${DB_CLIENT:-pg}" && \
  echo "üåê Public URL: ${PUBLIC_URL:-http://localhost:8055}" && \
  \
  MAX_RETRIES=30 && \
  RETRY_COUNT=0 && \
  \
  # Detect Postgres client
  if [ "${DB_CLIENT:-pg}" = "pg" ] || [ "$DB_CLIENT" = "postgres" ]; then \
    echo "‚è≥ Waiting for PostgreSQL connection to ${DB_HOST}..." && \
    until pg_isready -h "$DB_HOST" -p "${DB_PORT:-5432}" -U "$DB_USER" >/dev/null 2>&1 || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do \
      RETRY_COUNT=$((RETRY_COUNT + 1)); \
      echo "   Attempt $RETRY_COUNT/$MAX_RETRIES..."; \
      sleep 3; \
    done; \
  else \
    echo "‚è≥ Waiting for MySQL connection to ${DB_HOST}..." && \
    until mysqladmin ping -h"$DB_HOST" -P"${DB_PORT:-3306}" -u"$DB_USER" -p"$DB_PASSWORD" --silent >/dev/null 2>&1 || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do \
      RETRY_COUNT=$((RETRY_COUNT + 1)); \
      echo "   Attempt $RETRY_COUNT/$MAX_RETRIES..."; \
      sleep 3; \
    done; \
  fi; \
  \
  if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then \
    echo "‚ùå Database connection failed after $MAX_RETRIES attempts"; \
    exit 1; \
  fi; \
  \
  echo "‚úÖ Database connection established!" && \
  echo "üîë Bootstrapping Directus..." && \
  npx directus bootstrap || echo "‚ö†Ô∏è Bootstrap skipped (already initialized)" && \
  \
  echo "üéâ Starting Directus..." && \
  npx directus start'
